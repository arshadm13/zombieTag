/*!
 *  Licensed Materials - Property of IBM
 *  5725-I43 (C) Copyright IBM Corp. 2011, 2014. All Rights Reserved.
 *  US Government Users Restricted Rights - Use, duplication or
 *  disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 *
 *  IBM Mobile Application Security (MAS) v0.0.1
 */

'use strict';

var constants	= require('./constants'),
	logger		= require("./logger").withTag("Env Manager")
;

var Environment = {
	/**
	 * Retrieve the app ID from the URI if it conforms to the MAS URI format in the form of:
	 * /mas/v<version_number>/apps/<appId>
	 * 
	 * If appId cannot be determined, return null.
	 */
	getUriAppID : function(uri) {
		var appId;
		if (uri) {
			var parts = uri.split('/');
			if (parts.length >= 5 && parts[2].indexOf('v') == 0 && parts[3] === constants.MAS_URI_APPS) {
				appId = parts[4];  // /service/v1/apps/<app_id>
			    logger.debug("Successfully retrieved appId: " + appId);
			} else {
			    logger.debug("Unable to parse appID from uri: ", uri);
			} 
		}
		return appId; 
	},

	/**
	 * Retrieve the MAS Url from either the VCAP_SERVICES or VCAP_APPLICATION environment variables.
	 * The resultant URL will be in the form of <protocol>://<subdomain>.<domain>/mas//v<version_number>
	 * If the URL can't be obtain from the VCAP environment variable, a null is returned.
	 */
	getMasUrl: function() {
	    var vcapService = JSON.parse(process.env['VCAP_SERVICES']);
		var masUrl;
		
		Object.keys(vcapService).forEach(function(key) {
		  var service = vcapService[key];
		  if (key.indexOf(constants.MAS_PREFIX) != -1) {
		     var aurl = service[0].credentials.admin_url;
		     var parts = aurl.split('/');
		     parts[3] = constants.MAS_NAME;
		     parts[4] = constants.MAS_VERSION;
		     masUrl = parts.slice(0,5).join('/'); // 0-2 is the protocol + domain name 
		  }
		})
	
		if (masUrl) {
		   return masUrl;
		}
		return null;
	}
}

exports = module.exports = Environment;